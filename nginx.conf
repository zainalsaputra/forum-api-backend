# Default server configuration
limit_req_zone $binary_remote_addr zone=one:10m rate=90r/m;

server {
    server_name vast-donkeys-unite-quickly.a276.dcdg.xyz www.vast-donkeys-unite-quickly.a276.dcdg.xyz;

    # SSL configuration
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;

    # SSL certificates managed by Certbot
    ssl_certificate /etc/letsencrypt/live/vast-donkeys-unite-quickly.a276.dcdg.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vast-donkeys-unite-quickly.a276.dcdg.xyz/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Root directory and index files
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    # Main location block
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /threads {
            proxy_pass http://localhost:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            limit_req zone=one;
    }

    # Redirect non-HTTPS to HTTPS
    if ($host = www.vast-donkeys-unite-quickly.a276.dcdg.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = vast-donkeys-unite-quickly.a276.dcdg.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
}

# HTTP server block for redirecting to HTTPS
server {
    listen 80;
    listen [::]:80;

    server_name vast-donkeys-unite-quickly.a276.dcdg.xyz www.vast-donkeys-unite-quickly.a276.dcdg.xyz;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri; # managed by Certbot
}

# Additional virtual host configuration example
# You can move that to a different file under sites-available/ and symlink it to sites-enabled/ to enable it.
#
# server {
#     listen 80;
#     listen [::]:80;
#     server_name example.com;
#     root /var/www/example.com;
#     index index.html;
#
#     location / {
#         try_files $uri $uri/ =404;
#     }
# }
